var documenterSearchIndex = {"docs":
[{"location":"README/#FwiFlow-1","page":"FwiFlow","title":"FwiFlow","text":"","category":"section"},{"location":"README/#","page":"FwiFlow","title":"FwiFlow","text":"This project consider the coupling of the wave equation and a two-phase incompressible immiscible flow equation, mainly for CO2 injection or water injection monitoring","category":"page"},{"location":"README/#","page":"FwiFlow","title":"FwiFlow","text":"utt = m(x) uxx + f(x,t)","category":"page"},{"location":"README/#","page":"FwiFlow","title":"FwiFlow","text":"m_t = grad(a(x)grad(m)) + b(x)*grad(m)","category":"page"},{"location":"README/#","page":"FwiFlow","title":"FwiFlow","text":"The time scale T2 for the second equation is much larger than that of the first one T1","category":"page"},{"location":"README/#","page":"FwiFlow","title":"FwiFlow","text":"T2 >> T1","category":"page"},{"location":"README/#","page":"FwiFlow","title":"FwiFlow","text":"a(x), b(x) are unknown functions and will be calibrated using observation data di(x), which depends on ui for each observation time i","category":"page"},{"location":"README/#Instruction-1","page":"FwiFlow","title":"Instruction","text":"","category":"section"},{"location":"README/#","page":"FwiFlow","title":"FwiFlow","text":"Compile AdvectionDiffusion","category":"page"},{"location":"README/#","page":"FwiFlow","title":"FwiFlow","text":"cd Ops/AdvectionDiffusion/\nmkdir build\ncd build\ncmake ..\nmake -j","category":"page"},{"location":"README/#","page":"FwiFlow","title":"FwiFlow","text":"Test AdvectionDiffusion and Generate Data (required)","category":"page"},{"location":"README/#","page":"FwiFlow","title":"FwiFlow","text":"julia> include(\"cdtest.jl\")\njulia> include(\"gradtest.jl\")","category":"page"},{"location":"README/#","page":"FwiFlow","title":"FwiFlow","text":"Compile CUFA","category":"page"},{"location":"README/#","page":"FwiFlow","title":"FwiFlow","text":"cd Ops/FWI/CUFD/Src\nmake -j","category":"page"},{"location":"README/#","page":"FwiFlow","title":"FwiFlow","text":"Compile Wrapper","category":"page"},{"location":"README/#","page":"FwiFlow","title":"FwiFlow","text":"cd Ops/FWI/ops/build\ncmake ..\nmake -j","category":"page"},{"location":"README/#","page":"FwiFlow","title":"FwiFlow","text":"Generate data","category":"page"},{"location":"README/#","page":"FwiFlow","title":"FwiFlow","text":"julia> include(\"generate_m.jl\")\npython main_calc_obs_data.py\npython fwitest.py","category":"page"},{"location":"README/#","page":"FwiFlow","title":"FwiFlow","text":"Test Wrapper","category":"page"},{"location":"README/#","page":"FwiFlow","title":"FwiFlow","text":"cd src","category":"page"},{"location":"README/#","page":"FwiFlow","title":"FwiFlow","text":"julia> include(\"fwi_gradient_check.jl\")\njulia> include(\"coupled_gradient_check\")","category":"page"},{"location":"README/#","page":"FwiFlow","title":"FwiFlow","text":"Run experiments","category":"page"},{"location":"README/#","page":"FwiFlow","title":"FwiFlow","text":"julia> include(\"learn_m.jl\")","category":"page"},{"location":"#-1","page":"","title":"","text":"","category":"section"},{"location":"#General-Problem-1","page":"","title":"General Problem","text":"","category":"section"},{"location":"#","page":"","title":"","text":"This framework uses waveform data to invert for intrinsic parameters (e.g., permeability and porosity) in subsurface problems, with coupled flow physics, rock physics, and wave physics models. (Image: )","category":"page"},{"location":"#Physical-Models-1","page":"","title":"Physical Models","text":"","category":"section"},{"location":"#Flow-Physics-1","page":"","title":"Flow Physics","text":"","category":"section"},{"location":"#","page":"","title":"","text":"The flow physics component maps from intrinsic properties such as permeability to flow properties, such as fluid saturation. We use a model of two-phase flow in porous media as an example. The governing equations are convervation of mass, Darcy's law, and other relationships.","category":"page"},{"location":"#Rock-Physics-1","page":"","title":"Rock Physics","text":"","category":"section"},{"location":"#","page":"","title":"","text":"The rock physics model describes the relationship between fluid properties and rock elastic properties. As one fluid phase displaces the other, the bulk modulus and density of rocks vary. ","category":"page"},{"location":"#Wave-Physics-1","page":"","title":"Wave Physics","text":"","category":"section"},{"location":"#","page":"","title":"","text":"The elastic wave equation maps from elastic properties to wavefields, such as particle velocity and stress, which can be recorded by receiver arrays as seismic waveform data.","category":"page"},{"location":"#Intelligent-Automatic-Differentiation-1","page":"","title":"Intelligent Automatic Differentiation","text":"","category":"section"},{"location":"#","page":"","title":"","text":"The Intelligent Automatic Differentiation method provides three levels of user control with (1) built-in differentiable operators from modern deep-learning infrastructures (TensorFlow), and customized operators that can either (2) encapsulate analytic adjoint gradient computation or (3) handle the forward simulation and compute the corresponding gradient for a single time step. This intelligent strategy strikes a good balance between computational efficiency and programming efficiency and would serve as a paradigm for a wide range of PDE-constrained geophysical inverse problems.","category":"page"},{"location":"#The-Adjoint-Method-and-Automatic-Differentation-1","page":"","title":"The Adjoint Method & Automatic Differentation","text":"","category":"section"},{"location":"#Customized-Operators-1","page":"","title":"Customized Operators","text":"","category":"section"}]
}
